
ToDo List

----------------------------
STYLE CHOICES
----------------------------

Make the code easy to alter by isolating values that should be altered
- Produce some sort of documentation...?

----------------------------
ARDUINO IMPLEMENTATION - RAY
----------------------------

Write arduino functions for various instructions from python to arduino 
	(convert instruction like turn left to motor controls).

Think about how to handle buffer getting too large
- Temporarily stop Arduino loop, let python catch up

Learn how to write goddamn strings in c++ (have fun Ray lmao)

Rewrite arduino instructions to be as small as possible (memory-wise) to decrease communication time

Change naming conventions for Arduino output onto serial to make it easy to filter 
	out certain data (e.g. a certain prefix for ultrasound sensors so they can be quickly removed from buffer)

----------------------------
MAIN PYTHON PROCESS - BERNARDO
----------------------------

Write the self-calibration algorithm using the dimensions of the arena. (Maybe expect a user input or something)
- One problem is how to trigger additional functions through dictionary process.
- Maybe trigger upon changing state, and write change state method in Task object
	that performs actions based on state change!

Implement instruction write onto the serial

When buffer is too large, search through the buffer for most important functions

Eventually, rewrite the main processor objects to be able to be applied for any task
	upon initialisation by passing dictionaries into it

----------------------------
MIGHT BE USEFUL LATER
----------------------------

{How to handle interrupts from python? (research)} (not rly useful) (try, catch)

